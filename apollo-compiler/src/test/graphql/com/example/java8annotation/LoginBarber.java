// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.java8annotation;

import com.apollographql.apollo.api.Mutation;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.Optional;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;

public final class LoginBarber implements Mutation<LoginBarber.Data, Optional<LoginBarber.Data>, LoginBarber.Variables> {
  public static final String OPERATION_ID = "fc59ce470cc67ebe2006ba3711b32518e92c64d5cefe41dbbac36a318f40142a";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "mutation LoginBarber($input: Login!) {\n"
        + "  login(input: $input) {\n"
        + "    __typename\n"
        + "    response\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "LoginBarber";
    }
  };

  private final LoginBarber.Variables variables;

  public LoginBarber(com.example.java8annotation.type. @NotNull Login input) {
    Utils.checkNotNull(input, "input == null");
    variables = new LoginBarber.Variables(input);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public Optional<LoginBarber.Data> wrapData(LoginBarber.Data data) {
    return Optional.fromNullable(data);
  }

  @Override
  public LoginBarber.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<LoginBarber.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<Optional<LoginBarber.Data>> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Optional<LoginBarber.Data>> parse(@NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Optional<LoginBarber.Data>> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<Optional<LoginBarber.Data>> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    private com.example.java8annotation.type. @NotNull Login input;

    Builder() {
    }

    public Builder input(com.example.java8annotation.type. @NotNull Login input) {
      this.input = input;
      return this;
    }

    public LoginBarber build() {
      Utils.checkNotNull(input, "input == null");
      return new LoginBarber(input);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final com.example.java8annotation.type. @NotNull Login input;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(com.example.java8annotation.type. @NotNull Login input) {
      this.input = input;
      this.valueMap.put("input", input);
    }

    public com.example.java8annotation.type. @NotNull Login input() {
      return input;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeObject("input", input.marshaller());
        }
      };
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("login", "login", new UnmodifiableMapBuilder<String, Object>(1)
      .put("input", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "input")
        .build())
      .build(), false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull Login login;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@NotNull Login login) {
      this.login = Utils.checkNotNull(login, "login == null");
    }

    public @NotNull Login login() {
      return this.login;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], login.marshaller());
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "login=" + login
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return this.login.equals(that.login);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= login.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final Login.Mapper loginFieldMapper = new Login.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final Login login = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<Login>() {
          @Override
          public Login read(ResponseReader reader) {
            return loginFieldMapper.map(reader);
          }
        });
        return new Data(login);
      }
    }
  }

  public static class Login {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("response", "response", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String response;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Login(@NotNull String __typename, @NotNull String response) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.response = Utils.checkNotNull(response, "response == null");
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @NotNull String response() {
      return this.response;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], response);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Login{"
          + "__typename=" + __typename + ", "
          + "response=" + response
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Login) {
        Login that = (Login) o;
        return this.__typename.equals(that.__typename)
         && this.response.equals(that.response);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= response.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Login> {
      @Override
      public Login map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String response = reader.readString($responseFields[1]);
        return new Login(__typename, response);
      }
    }
  }
}
